# Example simulation for integrating veins (http://veins.car2x.org/) with Simu5G
# 
# Requirements:
#       You need to enable the feature "Simu5G Cars" for this simulation
#       (Project->Properties->OMNeT++->Project Features)
#
#       You need to import the "veins" project and its subproject
#       "veins_inet" in your workspace.
[General]
cmdenv-express-mode = true
cmdenv-autoflush = true
image-path = ../../images
network = Highway5G

##########################################################
#            Simulation parameters                       #
##########################################################
debug-on-errors = false
print-undisposed = false

sim-time-limit = 120s

**.sctp.**.scalar-recording = true
**.sctp.**.vector-recording = true
**.routingRecorder.enabled = false


##########################################################
#            VeinsManager parameters                     #
##########################################################
*.veinsManager.host = "localhost"       # if traci-launchd runs on localhost
*.veinsManager.port = 9999     # traci-launchd on different host/container
*.veinsManager.moduleType = "simu5g.nodes.cars.NRCar"
*.veinsManager.moduleName = "car"
*.veinsManager.launchConfig = xmldoc("cenarioB.launchd.xml")
*.veinsManager.updateInterval = 0.5s

*.configurator.addStaticRoutes = true
*.configurator.assignDisjunctSubnetAddresses = true
*.configurator.networkConfiguratorModule = "IPv4NetworkConfigurator"
*.configurator.config = xmldoc("demo.xml")
*.configurator.interfaceFilter = "*"

# PhysicalEnvironment
*.physicalEnvironment.config = xmldoc("obstaclesB.xml")
*.radioMedium.obstacleLoss.typename = "IdealObstacleLoss"

##########################################################
#                      Mobility                          #
##########################################################
*.car[*].mobility.typename = "projectpredicthandover.veins_inet.VeinsInetMobility"

**.mobility.constraintAreaMaxX = 3000m
**.mobility.constraintAreaMinX = 0m
**.mobility.constraintAreaMaxY = 3000m
**.mobility.constraintAreaMinY = 0m
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 10m

# *.gNodeB1.mobility.initialX = 1129.71m # PARA CENARIO A
# *.gNodeB1.mobility.initialY = 555.867m # PARA CENARIO A
*.gNodeB1.mobility.initialX = 1843.35m # PARA CENARIO B
*.gNodeB1.mobility.initialY = 2161.25m # PARA CENARIO B
#*.gNodeB1.mobility.initialX = 2425.22m # PARA CENARIO C
#*.gNodeB1.mobility.initialY = 1342.01m # PARA CENARIO C

*.gNodeB1.mobility.initialZ = 0m
# *.gNodeB1.mobility.constraintAreaMinX = 1129.71m # PARA CENARIO A
# *.gNodeB1.mobility.constraintAreaMaxX = 1129.71m # PARA CENARIO A
# *.gNodeB1.mobility.constraintAreaMinY = 555.867m # PARA CENARIO A
# *.gNodeB1.mobility.constraintAreaMaxY = 555.867m # PARA CENARIO A
*.gNodeB1.mobility.constraintAreaMinX = 1843.35m # PARA CENARIO B
*.gNodeB1.mobility.constraintAreaMaxX = 1843.35m # PARA CENARIO B
*.gNodeB1.mobility.constraintAreaMinY = 2161.25m # PARA CENARIO B
*.gNodeB1.mobility.constraintAreaMaxY = 2161.25m # PARA CENARIO B
#*.gNodeB1.mobility.constraintAreaMinX = 2425.22m # PARA CENARIO C
#*.gNodeB1.mobility.constraintAreaMaxX = 2425.22m # PARA CENARIO C
#*.gNodeB1.mobility.constraintAreaMinY = 1342.01m # PARA CENARIO C
#*.gNodeB1.mobility.constraintAreaMaxY = 1342.01m # PARA CENARIO C
*.gNodeB1.mobility.constraintAreaMinZ = 0m
*.gNodeB1.mobility.constraintAreaMaxZ = 0m

#*.gNodeB2.mobility.initialX = 1600m # PARA CENARIOS A E C
#*.gNodeB2.mobility.initialY = 800m # PARA CENARIOS A E C
*.gNodeB2.mobility.initialX = 1000.35m # PARA CENARIO B
*.gNodeB2.mobility.initialY = 2161.25m # PARA CENARIO B
*.gNodeB2.mobility.initialZ = 0m
#*.gNodeB2.mobility.constraintAreaMinX = 1600m # PARA CENARIO A E C
#*.gNodeB2.mobility.constraintAreaMaxX = 1600m # PARA CENARIO A E C
#*.gNodeB2.mobility.constraintAreaMinY = 800m # PARA CENARIO A E C
#*.gNodeB2.mobility.constraintAreaMaxY = 800m # PARA CENARIO A E C
*.gNodeB2.mobility.constraintAreaMinX = 1000.35m # PARA CENARIO B
*.gNodeB2.mobility.constraintAreaMaxX = 1000.35m # PARA CENARIO B
*.gNodeB2.mobility.constraintAreaMinY = 2161.25m # PARA CENARIO B
*.gNodeB2.mobility.constraintAreaMaxY = 2161.25m # PARA CENARIO B
*.gNodeB2.mobility.constraintAreaMinZ = 0m
*.gNodeB2.mobility.constraintAreaMaxZ = 0m

# gNodeB3
#*.gNodeB3.mobility.initialX = 1900m # PARA CENARIOS A E C
#*.gNodeB3.mobility.initialY = 1100m # PARA CENARIOS A E C
*.gNodeB3.mobility.initialX = 1500m # PARA CENARIO B
*.gNodeB3.mobility.initialY = 1875m # PARA CENARIO B
*.gNodeB3.mobility.initialZ = 0m
#*.gNodeB3.mobility.constraintAreaMinX = 1900m # PARA CENARIOS A E C
#*.gNodeB3.mobility.constraintAreaMaxX = 1900m # PARA CENARIOS A E C
#*.gNodeB3.mobility.constraintAreaMinY = 1100m # PARA CENARIOS A E C
#*.gNodeB3.mobility.constraintAreaMaxY = 1100m # PARA CENARIOS A E C
*.gNodeB3.mobility.constraintAreaMinX = 1500m # PARA CENARIO B
*.gNodeB3.mobility.constraintAreaMaxX = 1500m # PARA CENARIO B
*.gNodeB3.mobility.constraintAreaMinY = 1875m # PARA CENARIO B
*.gNodeB3.mobility.constraintAreaMaxY = 1875m # PARA CENARIO B
*.gNodeB3.mobility.constraintAreaMinZ = 0m
*.gNodeB3.mobility.constraintAreaMaxZ = 0m

# gNodeB4
# *.gNodeB4.mobility.initialX = 2100m # PARA CENARIOS A E C
# *.gNodeB4.mobility.initialY = 500m # PARA CENARIOS A E C
*.gNodeB4.mobility.initialX = 1070m # PARA CENARIO B
*.gNodeB4.mobility.initialY = 2569m # PARA CENARIO B
*.gNodeB4.mobility.initialZ = 0m
# *.gNodeB4.mobility.constraintAreaMinX = 2100m # PARA CENARIOS A E C
# *.gNodeB4.mobility.constraintAreaMaxX = 2100m # PARA CENARIOS A E C
# *.gNodeB4.mobility.constraintAreaMinY = 500m # PARA CENARIOS A E C 
# *.gNodeB4.mobility.constraintAreaMaxY = 500m # PARA CENARIOS A E C
*.gNodeB4.mobility.constraintAreaMinX = 1070m # PARA CENARIO B
*.gNodeB4.mobility.constraintAreaMaxX = 1070m # PARA CENARIO B
*.gNodeB4.mobility.constraintAreaMinY = 2569m # PARA CENARIO B
*.gNodeB4.mobility.constraintAreaMaxY = 2569m # PARA CENARIO B
*.gNodeB4.mobility.constraintAreaMinZ = 0m
*.gNodeB4.mobility.constraintAreaMaxZ = 0m



##########################################################
#          Mobile network specific parameters            #
##########################################################

# Number of Resource Blocks
**.numBands = 25 

# Transmission Power
**.ueTxPower = 20
**.eNodeBTxPower = 40

# Enable dynamic association of UEs (based on best SINR)
*.car[*].cellularNic.nrPhy.dynamicCellAssociation = true
*.car[*].masterId = 0     # ignored if dynamic association is disabled
*.car[*].macCellId = 0    # ignored if dynamic association is disabled
*.car[*].nrMasterId = 1     # ignored if dynamic association is disabled
*.car[*].nrMacCellId = 1    # ignored if dynamic association is disabled
*.car[*].cellularNic.nrPhy.handoverThreshold = -4

# eNodeB configuration
**.gNodeB1.macCellId = 1
**.gNodeB1.macNodeId = 1
**.gNodeB2.macCellId = 2
**.gNodeB2.macNodeId = 2 
**.gNodeB3.macCellId = 3
**.gNodeB3.macNodeId = 3
**.gNodeB4.macCellId = 4
**.gNodeB4.macNodeId = 4

# Enable handover
*.car[*].cellularNic.nrMac.dynamicCellAssociation = true
*.car[*].cellularNic.nrMac.enableHandover = true
*.car[*].cellularNic.nrPhy.enableHandover = true
*.gNodeB*.cellularNic.phy.enableHandover = true
*.gNodeB*.cellularNic.nrMac.enableHandover = true
*.gNodeB*.cellularNic.phy.handoverLatency = 5ms
*.gNodeB*.cellularNic.nrMac.handoverLatency = 5ms
*.gNodeB*.cellInfo.broadcastMessageInterval = 1s # eNB will sends broadcast triggers every second

# X2 and SCTP configuration
*.gNodeB*.x2App[*].server.localPort = 5000 + ancestorIndex(1) # Server ports (x2App[0]=5000, x2App[1]=5001, ...)
*.gNodeB*.numX2Apps = 2
*.gNodeB1.x2App[0].client.connectAddress = "gNodeB2%x2ppp0"
*.gNodeB1.x2App[1].client.connectAddress = "gNodeB3%x2ppp0"
*.gNodeB2.x2App[0].client.connectAddress = "gNodeB1%x2ppp0"
*.gNodeB2.x2App[1].client.connectAddress = "gNodeB4%x2ppp0"
*.gNodeB3.x2App[0].client.connectAddress = "gNodeB1%x2ppp0"
*.gNodeB3.x2App[1].client.connectAddress = "gNodeB4%x2ppp0"
*.gNodeB4.x2App[0].client.connectAddress = "gNodeB3%x2ppp0"
*.gNodeB4.x2App[1].client.connectAddress = "gNodeB2%x2ppp0"


**.sctp.nagleEnabled = false         # if true, transmission of small packets will be delayed on the X2
**.sctp.enableHeartbeats = false

# IntegratedCanvasVisualizer (2D)
*.visualizer.*.obstacleLossVisualizer.displayIntersections = true
*.visualizer.*.obstacleLossVisualizer.displayFaceNormalVectors = true
*.visualizer.*.obstacleLossVisualizer.intersectionLineColor = "yellow"
*.visualizer.*.mediumVisualizer.signalPropagationAnimationSpeed = 500/3e8
*.visualizer.*.mediumVisualizer.signalTransmissionAnimationSpeed = 50000/3e8
*.visualizer.*.mediumVisualizer.displaySignals = true
*.visualizer.canvasVisualizer.mediumVisualizer.displaySignalDepartures = false
*.visualizer.canvasVisualizer.mediumVisualizer.displaySignalArrivals = false
*.visualizer.*.physicalLinkVisualizer.displayLinks = true

# Ativa gravação de vetores/escalares de forma geral
**.scalar-recording = true
**.vector-recording = true

# Ativa gravação de mobilidade (posição)
**.mobility.tracemobility = true


# Força gravação de posição dos carros
**.car[*].mobility.posX.vector-recording = true
**.car[*].mobility.posY.vector-recording = true
**.car[*].mobility.posZ.vector-recording = true
**.car[*].mobility.speed.vector-recording = true

**.car[*].mobility.lastPosition.vector-recording = true

**.car[*].app[*].voIPGeneratedThroughput.vector-recording = true
**.car[*].cellularNic.nrPhy.servingCell.vector-recording = true # Funcionando
**.car[*].cellularNic.nrMac.macDelayDL.vector-recording = true
**.car[*].cellularNic.nrMac.macDelayUL.vector-recording = true
**.car[*].cellularNic.nrMac.macThroughputDL.vector-recording = true
**.car[*].cellularNic.nrMac.macThroughputUL.vector-recording = true
**.car[*].cellularNic.nrMac.macCellPacketLossDL.vector-recording = true
**.car[*].cellularNic.nrMac.macCellPacketLossUL.vector-recording = true
**.car[*].cellularNic.nrMac.macBufferOverflowDL.vector-recording = true
**.car[*].cellularNic.nrMac.macBufferOverflowUL.vector-recording = true
**.car[*].cellularNic.nrMac.harqErrorRateDL.vector-recording = true
**.car[*].cellularNic.nrMac.harqErrorRateUL.vector-recording = true
**.car[*].cellularNic.nrMac.harqTxAttemptsDL.vector-recording = true
**.car[*].cellularNic.nrMac.harqTxAttemptsUL.vector-recording = true
**.car[*].cellularNic.nrMac.receivedPacketFromUpperLayer.vector-recording = true
**.car[*].cellularNic.nrMac.receivedPacketFromLowerLayer.vector-recording = true
**.car[*].cellularNic.nrMac.sentPacketToUpperLayer.vector-recording = true
**.car[*].cellularNic.nrMac.sentPacketToLowerLayer.vector-recording = true
**.car[*].cellularNic.nrMac.measuredItbs.vector-recording = true
**.car[*].cellularNic.nrMac.macDelayD2D.vector-recording = true
**.car[*].cellularNic.nrMac.macThroughputD2D.vector-recording = true
**.car[*].cellularNic.nrMac.rcvdD2DModeSwitchNotification.vector-recording = true
**.car[*].cellularNic.nrPhy.averageCqiDL.vector-recording = true
**.car[*].cellularNic.nrPhy.averageCqiUL.vector-recording = true


# ----------------------------------------------------------------------------- #
# Config "VoIP-Uplink"
#
[Config VoIP-UL]

##########################################################
#                    App Layer                           #
##########################################################
*.server.numApps = 45
*.server.app[*].typename = "VoIPReceiver"
*.server.app[*].localPort = 3000 + ancestorIndex(0) 

*.car[*].numApps = 1
*.car[*].app[0].typename = "VoIPSender"
*.car[*].app[0].destAddress = "server"
*.car[*].app[0].destPort = 3000 + ancestorIndex(1)


# ----------------------------------------------------------------------------- #
# Config "VoIP-Downlink"
#
[Config VoIP-DL]

##########################################################
#                    App Layer                           #
##########################################################
*.server.numApps = 45
*.server.app[*].typename = "VoIPSender"
*.server.app[*].localPort = 3000 + ancestorIndex(0) 
*.server.app[*].destAddress = "car[" + string(ancestorIndex(0)) + "]"
*.server.app[*].startTime = 0.05s


*.car[*].numApps = 1
*.car[*].app[0].typename = "VoIPReceiver"



# ----------------------------------------------------------------------------- #
# Config "VoIP-D2D"
#
# In this configuration, UEs run a VoIP application (using UDP as transport layer protocol)
# They communicate using the D2D link, if they are under the same cell
#
[Config VoIP-D2D]

**.amcMode = "D2D"

# D2D-capable flows are started in D2D mode
*.car[*].cellularNic.d2dInitialMode = true

# --- Select CQI for D2D transmissions --- #
#
# To enable the reporting of CQIs for each D2D link, set the parameter *.gNodeB.cellularNic.phy.enableD2DCqiReporting
# To use fixed CQI, set the parameter **.usePreconfiguredTxParams and select the desired CQI using the parameter **.d2dCqi
*.gNodeB*.cellularNic.nrPhy.enableD2DCqiReporting = true
**.usePreconfiguredTxParams = false

# each vehicle transmits using D2D to the following one 
*.car[*].numApps = 1
*.car[0].app[0].typename = "VoIPSender"
*.car[0].app[0].destAddress = "car[1]"
*.car[1].app[0].typename = "VoIPReceiver"

*.car[2].app[0].typename = "VoIPSender"
*.car[2].app[0].destAddress = "car[3]"
*.car[3].app[0].typename = "VoIPReceiver"

*.car[4].app[0].typename = "VoIPSender"
*.car[4].app[0].destAddress = "car[5]"
*.car[5].app[0].typename = "VoIPReceiver"

*.car[6].app[0].typename = "VoIPSender"
*.car[6].app[0].destAddress = "car[7]"
*.car[7].app[0].typename = "VoIPReceiver"


# ----------------------------------------------------------------------------- #
# Config "D2DMulticast"
#
# In this configuration, vehicles form two groups (vehicles on the same lane are in the same group).
# For each group, the leader vehicle transmits periodic alert messages to following vehicles
#
[Config D2DMulticast]

### Enable D2D for the eNodeB and the UEs involved in direct communications ###
**.amcMode = "D2D"

### Select CQI for D2D transmissions ###
# One-to-Many communications work with fixed CQI values only.
# Set the parameter **.usePreconfiguredTxParams and select the desired CQI using the parameter **.d2dCqi
**.enableD2DCqiReporting = false
**.usePreconfiguredTxParams = true
**.d2dCqi = ${cqi=7}

### Traffic configuration ###
*.car[*].numApps = 1

# --- 1st group: 0 < 1 < 2 < 3 -- #
*.car[0..4].ipv4.configurator.mcastGroups = "224.0.0.10"
# transmitter
*.car[0].app[*].typename = "AlertSender"
*.car[0].app[*].localPort = 3088+ancestorIndex(0) 
*.car[0].app[*].startTime = uniform(0s,0.02s)
*.car[0].app[*].destAddress = "224.0.0.10"          # IP address of the multicast group 
*.car[0].app[*].destPort = 1000
# receivers
*.car[1..3].app[*].typename = "AlertReceiver"
*.car[1..3].app[*].localPort = 1000

# --- 2nd group: 4 < 5 < 6 < 7 -- #
*.car[4..7].ipv4.configurator.mcastGroups = "224.0.0.11"
# transmitter
*.car[4].app[*].typename = "AlertSender"
*.car[4].app[*].localPort = 3088+ancestorIndex(0) 
*.car[4].app[*].startTime = uniform(0s,0.02s)
*.car[4].app[*].destAddress = "224.0.0.11"          # IP address of the multicast group 
*.car[4].app[*].destPort = 1000
# receivers (they must belong to the above multicast group)
*.car[5..7].app[*].typename = "AlertReceiver"
*.car[5..7].app[*].localPort = 1000


